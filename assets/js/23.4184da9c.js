(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{394:function(_,e,t){},451:function(_,e,t){"use strict";t(394)},488:function(_,e,t){"use strict";t.r(e);t(451);var v=t(33),a=Object(v.a)({},(function(){var _=this,e=_.$createElement,t=_._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h3",{attrs:{id:"_2022-02-04-새로-알게된-점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2022-02-04-새로-알게된-점"}},[_._v("#")]),_._v(" 2022/02/04, 새로 알게된 점")]),_._v(" "),t("p",{staticClass:"tags"},[_._v("#Text #Color #Facet #Seaborn")]),_._v(" "),t("p",[_._v("  세부적인 사용 방법에 대해 알아보자.")]),_._v(" "),t("h4",{attrs:{id:"text"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#text"}},[_._v("#")]),_._v(" Text")]),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("fig.suptitle('string')")]),_._v("   ➜   figure 의 title 을 설정한다.")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("ax.set_title('string')")]),_._v("   ➜   Ax 의 title 을 설정한다.")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("ax.set_xlabel('string')")]),_._v("   ➜   Ax 의 X 축 title 을 설정한다.")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("ax.set_ylabel('string')")]),_._v("   ➜   AX 의 Y 축 title 을 설정한다.")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("fig.text(x, y, s='string')")]),_._v("   ➜   figure 기준으로 x, y 위치(비율)에 text 를 설정한다.")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("ax.text(x, y, s='string')")]),_._v("   ➜   Ax 기준으로 x, y 위치(tick)에 text 를 설정한다.")])])]),_._v(" "),t("br"),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("family=")]),_._v("   ➜   폰트 ( serif, sans-serif, fantasy, monospace, ... )")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("style=")]),_._v(" or "),t("code",[_._v("fontstyle=")]),_._v("   ➜   폰트 스타일 ( normal, italic, bold italic, ... )")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("weight=")]),_._v(" or "),t("code",[_._v("fontweight=")]),_._v("   ➜   굵기 ( light, normal, medium, semibold, bold, heavy, black, ... )")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("size=")]),_._v(" or "),t("code",[_._v("fontsize=")]),_._v("   ➜   크기. 숫자를 입력하거나 정해진 크기 단위 입력 ( xx-small, x-small, small, medium, large, x-large, xx-large, ...)")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("color=")]),_._v("   ➜   웹에서 사용하는 color 코드, 이름 사용 가능")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("linespacing=")]),_._v("   ➜   줄 간격")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("backgroundcolor=")]),_._v("   ➜   배경 색")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("alpha=")]),_._v("   ➜   투명도")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("zorder=")]),_._v("   ➜   z 축. 보여지는 순서")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("visible=")]),_._v("   ➜   보여지는지에 대한 여부")])])]),_._v(" "),t("br"),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("ha=")]),_._v("   ➜   수평 정렬. x, y 위치에 해당하는 부분을 어디로 정렬하는지. ( left, center, right )")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("va=")]),_._v("   ➜   수직 정렬. x, y 위치에 해당하는 부분을 어디로 정렬하는지. ( top, center, bottom )")])])]),_._v(" "),t("br"),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("bbox=dict()")]),_._v("   ➜   text 를 감싸는 box")]),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("dict(boxstyle=)")]),_._v("   ➜   감싸는 box 형태 ( square, circle, larrow, darrow, rarrow )")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("dict(boxstyle=)")]),_._v("   ➜   감싸는 box 테두리 형태 ( round, round4, sawtooth, roundtooth )")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("dict(facecolor=)")]),_._v("   ➜   box 배경 색.")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("dict(ec=)")]),_._v("   ➜   box 테두리 색")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("dict(alpha=)")]),_._v("   ➜   box 투명도")])])])])]),_._v(" "),t("br"),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("ax.spine['position'].set_visible(False)")]),_._v("   ➜   해당 position ( top, bottom, left, right ) 축 숨기기")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("ax.set(frame_on=False)")]),_._v("   ➜   이 방식으로 모든 축 숨기기 가능")])])])]),_._v(" "),t("br"),_._v(" "),t("h4",{attrs:{id:"color"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#color"}},[_._v("#")]),_._v(" Color")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("범주형")]),_._v("   ➜   채도와 광도는 유지하고, 색상의 변화만 준다.")]),_._v(" "),t("li",[t("strong",[_._v("연속형")]),_._v("   ➜   색조는 유지하고, 색의 밝기만 조정한다.")])]),_._v(" "),t("p",[t("code",[_._v("bar")]),_._v(" 에서는 "),t("code",[_._v("color=")]),_._v(", "),t("code",[_._v("scatter")]),_._v(" 에서는 "),t("code",[_._v("color=")]),_._v(", "),t("code",[_._v("c=")]),_._v(", "),t("code",[_._v("cmap=")]),_._v(", "),t("code",[_._v("vmin=")]),_._v(", "),t("code",[_._v("vmax=")]),_._v(" 등 과 같은 속성으로 색상 표현 방식을 정한다.")]),_._v(" "),t("p",[_._v("보기 좋게 색을 표현하는 방식이 다소 까다로워 "),t("a",{attrs:{href:"https://matplotlib.org/stable/api/colors_api.html",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[_._v("공식문서")]),t("OutboundLink")],1),_._v("를 참고하며 사용 방식을 숙지하고,\n여러 color palette 를 참고하여 적용시키는 연습을 하자.")]),_._v(" "),t("br"),_._v(" "),t("h4",{attrs:{id:"facet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#facet"}},[_._v("#")]),_._v(" Facet")]),_._v(" "),t("p",[_._v("  Matplotlib 에서 "),t("span",{staticStyle:{color:"#2454ff"}},[t("strong",[_._v("Facet")])]),_._v(" 이란 분할을 의미한다. 즉, 화면 상에 한 Figure 속 Ax 를 어떻게 배치할 것인가에 대한 내용이다.\n"),t("code",[_._v("plt.subplot()")]),_._v(", "),t("code",[_._v("plt.figure()")]),_._v(" + "),t("code",[_._v("fig.add_subplot()")]),_._v(", "),t("code",[_._v("plt.subplots()")]),_._v(" 과 같은 방식으로 배치하는 방식을 익혔지만 어디까지나 수평 방향 단일 공간 기준이다.\nfigure 에서 단일 Ax 가 가로로 길게 차지하려면 어떻게 해야할까? 단일 Ax 가 세로로 길게 차지하려면 어떻게 해야할까?")]),_._v(" "),t("p",[_._v("  Grid Spec 을 활용한다면 numpy 의 slicing 방법처럼 "),t("code",[_._v("fig.add_grid_spec()")]),_._v(" 이나 "),t("code",[_._v("fig.subplot2gird()")]),_._v(" 에 적용시키면 된다. 그게 아니로 내부에 그린다고 한다면,\n"),t("code",[_._v("ax.inset_axes()")]),_._v(" 나 "),t("code",[_._v("make_axes_locatable(ax)")]),_._v(" 방식을 사용하면 되지만, 이 방법으로 원하는 형태를 그려내기가 어려워 권장하지 않는다.\n또한, 전반적으로 다소 복잡한 배치를 가지는 구조를 원한다면, matplotlib 으로만 해결하려는 것이 아니라 단일 figure 들을 모아 "),t("strong",[_._v("figma")]),_._v(" 나 "),t("strong",[_._v("powerpoint")]),_._v(" 를 이용하면 어떨까?")]),_._v(" "),t("p",[_._v("  참고로 figure 를 저장하려면 "),t("code",[_._v("fig.savefig('file_name', dpi=150)")]),_._v(" 코드를 실행시키면 된다. dpi 는 높을 수록 고해상도, 고용량 png 파일을 얻을 수 있다.")]),_._v(" "),t("br"),_._v(" "),t("h4",{attrs:{id:"seaborn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#seaborn"}},[_._v("#")]),_._v(" Seaborn")]),_._v(" "),t("p",[_._v("  Seaborn 은 Matplotlib 기반 통계 시각화 라이브러리로써, "),t("span",{staticStyle:{color:"#2454ff"}},[t("strong",[_._v("Matplotlib 으로 커스텀")])]),_._v("이 가능할 뿐만 아니라,\nMatplotlib 으로만 구현할 때는 복잡했던 그래프를 "),t("span",{staticStyle:{color:"#2454ff"}},[t("strong",[_._v("쉽게 구현")])]),_._v("할 수 있다.")]),_._v(" "),t("p",[_._v("  우선 공통적으로 적용되는 파라미터가 있다. 이것을 알아본 다음, 그래프 그리는 함수를 차근차근 살펴보면 적용하는 방법이 무척이나 간단하다는 것을 알게 된다.")]),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("x")]),_._v("   ➜   X 축 tick 에 적용시킬 feature name")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("y")]),_._v("    ➜   Y 축 tick 에 적용시킬 feature name")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("data")]),_._v("   ➜   보고자하는 대상 데이터")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("hue")]),_._v("   ➜   두 개의 feature 와 더불어 추가로 보고자 하는 feature 속 category")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("hue_order")]),_._v("   ➜   category 순서 정렬")])])]),_._v(" "),t("li",[t("p",[t("code",[_._v("order")]),_._v("   ➜   feature 순서 정렬")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("ax")]),_._v("   ➜   적용시킬 Ax")])]),_._v(" "),t("li",[t("p",[_._v("ETC   ➜   "),t("code",[_._v("palette")]),_._v(", "),t("code",[_._v("color")]),_._v(", "),t("code",[_._v("saturate")]),_._v(", ...")])])]),_._v(" "),t("br"),_._v(" "),t("ul",[t("li",[t("p",[t("strong",[_._v("Categorical")])]),_._v(" "),t("ul",[t("li",[_._v("Counter Plot   ➜   "),t("code",[_._v("sns.counterplot(x='feature_name_1', y='feature_name_2', data=df, ax=ax)")])]),_._v(" "),t("li",[_._v("Box Plot   ➜   "),t("code",[_._v("sns.boxplot(x='feature_name_1', y='feature_name_2', data=df, ax=ax)")])]),_._v(" "),t("li",[_._v("Violin Plot   ➜   "),t("code",[_._v("sns.violinplot(x='feature_name_1', y='feature_name_2', data=df, ax=ax)")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("bw=")]),_._v("   ➜   얼마나 자세히 표현할 지. 작을수록 세세 ( default = 0.2 )")]),_._v(" "),t("li",[t("code",[_._v("cut=")]),_._v("   ➜   양 끝 부분을 얼마나 자를지. ( cut=0 ➜ tick 범위만큼만 표현 )")]),_._v(" "),t("li",[t("code",[_._v("inner=")]),_._v("   ➜   내부를 어떻게 표현할 지. ( stick, quartile )")]),_._v(" "),t("li",[t("code",[_._v("scale=")]),_._v("   ➜   area, amount, width")]),_._v(" "),t("li",[t("code",[_._v("split=")]),_._v("   ➜   두 개의 category 를 동시에 비교 ( split=True )")])])]),_._v(" "),t("li",[_._v("Boxen Plot   ➜   "),t("code",[_._v("sns.boxenplot(x='feature_name_1', y='feature_name_2', data=df, ax=ax)")])]),_._v(" "),t("li",[_._v("Swarm Plot   ➜   "),t("code",[_._v("sns.swarmplot(x='feature_name_1', y='feature_name_2', data=df, ax=ax)")])]),_._v(" "),t("li",[_._v("Strip Plot   ➜   "),t("code",[_._v("sns.stripplot(x='feature_name_1', y='feature_name_2', data=df, ax=ax)")])])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("Distribution")])]),_._v(" "),t("ul",[t("li",[_._v("Hist Plot   ➜   "),t("code",[_._v("sns.histplot(x='feature_name', data=df, ax=ax)")]),_._v(" "),t("ul",[t("li",[_._v("히스토그램")]),_._v(" "),t("li",[t("code",[_._v("binwidth=")]),_._v("   ➜   몇 개의 tick 마다 막대 하나 그릴지.")]),_._v(" "),t("li",[t("code",[_._v("bins=")]),_._v("   ➜   막대 몇 개를 그릴지.")]),_._v(" "),t("li",[t("code",[_._v("element=")]),_._v("   ➜   step = 기본 hist 에서 테두리를 없앰  /  poly = 다각형으로 바꿈")]),_._v(" "),t("li",[t("code",[_._v("multiple=")]),_._v("   ➜   stack = 어제 살펴본 stack 과 동일  /  dodge = grouped 버전  /  fill = percentage 버전")])])]),_._v(" "),t("li",[_._v("KDE Plot   ➜   "),t("code",[_._v("sns.kdeplot(x='feature_name', data=df, ax=ax)")]),_._v(" "),t("ul",[t("li",[_._v("Kernel Density Estimate (연속 밀도 함수)")]),_._v(" "),t("li",[t("code",[_._v("fill=True")]),_._v(" 로 설정하는 것이 일반적 ( 연속 밀도 함수임을 짐작하게 함 )")]),_._v(" "),t("li",[t("code",[_._v("bw_method=")]),_._v("   ➜   얼마나 세세하게 표현할 지. 작을수록 세세")]),_._v(" "),t("li",[t("code",[_._v("cut")])]),_._v(" "),t("li",[t("code",[_._v("multiple")])]),_._v(" "),t("li",[t("code",[_._v("cumulative")])])])]),_._v(" "),t("li",[_._v("ECDF Plot   ➜   "),t("code",[_._v("sns.ecdfplot(x='feature_name', data=df, ax=ax)")]),_._v(" "),t("ul",[t("li",[_._v("누적 밀도 함수")])])]),_._v(" "),t("li",[_._v("RUG Plot   ➜   "),t("code",[_._v("sns.rugplot(x='feature_name', data=df, ax=ax)")])]),_._v(" "),t("li",[t("strong",[_._v("Bivariate Distribution")]),_._v(" "),t("ul",[t("li",[_._v("2개 이상 변수에 대해서 동시에 분포 확인")]),_._v(" "),t("li",[t("code",[_._v("sns.histplot(x='feature_name', y='feature_name_2', data=df, ax=ax, cbar=False, bins=(10, 20))")])]),_._v(" "),t("li",[t("code",[_._v("sns.kdeplot(x='feature_name', y='feature_name_2', data=df, ax=ax, fill=True, bw_method=0.1)")])])])])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("Relation")])]),_._v(" "),t("ul",[t("li",[_._v("Scatter Plot   ➜   "),t("code",[_._v("sns.scatterplot(x='feature_name', y='feature_name_2', data=df, ax=ax, hue='feature_category')")])]),_._v(" "),t("li",[_._v("Line Plot")]),_._v(" "),t("li",[_._v("Reg Plot")])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("Correlation")])]),_._v(" "),t("ul",[t("li",[_._v("Heat Map   ➜   "),t("code",[_._v("sns.heatmap(df.corr(), ax=ax, vmin=-1, vmax=1, center=0, cmap='coolwarm', annot=True, fmt='.2f', linewidth=0.1, square=True)")])]),_._v(" "),t("li",[_._v("Mask 를 만들어서 mask 속성에 할당하면 대칭이 되는 반대 삼각형을 제외하고 그릴 수 있다.")])])])]),_._v(" "),t("br"),_._v(" "),t("ul",[t("li",[t("p",[t("strong",[_._v("jointplot")])]),_._v(" "),t("ul",[t("li",[_._v("하나의 figure 를 기준으로 내부는 scatter 로 표현하고 외부는 hist 나 kde 로 표현")])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("pairplot")])]),_._v(" "),t("ul",[t("li",[_._v("모든 feature 간의 관계 파악한다. 기본은 scatter 로 나타나고 대각 방향은 hist 로 나타난다. 단일 category 시 대각 방향은 hist, 복수 category 일 시 kde 로 나타난다.")]),_._v(" "),t("li",[_._v("대칭되는 부분을 그리지 않으려면 "),t("code",[_._v("corner=True")]),_._v(" 로 설정한다.")])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("facetgrid")])]),_._v(" "),t("ul",[t("li",[_._v("다중 패널로 feature 간 관계 뿐만 아니라, feature 속 category 끼리의 관계도 파악할 수 있다.")]),_._v(" "),t("li",[_._v("catplot")]),_._v(" "),t("li",[_._v("displot")]),_._v(" "),t("li",[_._v("relplot")]),_._v(" "),t("li",[_._v("lmplot")])])])]),_._v(" "),t("br"),_._v(" "),t("hr"),_._v(" "),t("h3",{attrs:{id:"피어-세션"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#피어-세션"}},[_._v("#")]),_._v(" 피어 세션")]),_._v(" "),t("p",[_._v("Notion 의 DeepNote 임베딩 기능을 활용하면, 팀단위 경진대회 참여시 EDA 에 잘 활용될 수 있을 것 같다.")]),_._v(" "),t("br"),_._v(" "),t("br"),_._v(" "),t("br")])}),[],!1,null,"42817036",null);e.default=a.exports}}]);