(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{378:function(t,s,n){},435:function(t,s,n){"use strict";n(378)},507:function(t,s,n){"use strict";n.r(s);n(435);var a=n(33),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"_2022-01-18-새로-알게된-점"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2022-01-18-새로-알게된-점"}},[t._v("#")]),t._v(" 2022/01/18, 새로 알게된 점")]),t._v(" "),n("p",{staticClass:"tags"},[t._v("#Python_Basic")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("Python에서 Tuple은 List 보다 약 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("3배 빠른 초기화 속도")])]),t._v("를 보이며,\n메모리 상에서 2개의 블럭을 차지하는 List에 비하여 한 블럭만 차지하기 때문에 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("메모리도 적게 사용")])]),t._v("한다.\n또한 인덱싱 속도도 약간 빠르다. ("),n("a",{attrs:{href:"https://codacoding.tistory.com/36",target:"_blank",rel:"noopener noreferrer"}},[t._v("참고"),n("OutboundLink")],1),t._v(")")])]),t._v(" "),n("li",[n("p",[t._v("dictionary의 구조는 3.6 전후로 바뀐다. 이전에는 "),n("code",[t._v("dk_sizes")]),t._v(" (= 8) 만큼의 "),n("code",[t._v("entries")]),t._v("라는 해시 테이블을 생성하고,\n해싱된 key 값에 해당하는 인덱스 위치로 entry가 저장되었다. 그래서 "),n("code",[t._v("hash(key % 8)")]),t._v("로 접근이 가능했는데,\n이러한 방식 특성상 메모리에 빈 공간이 많았다."),n("br"),t._v("\n  하지만 3.6 이후부터는 "),n("code",[t._v("dk_sizes")]),t._v(" (= 8) 만큼의 "),n("code",[t._v("indices")]),t._v("라는 해시 테이블을 생성하고,\n해싱된 key 값에 해당하는 indices에서 entries에 접근할 index를 구한 뒤, "),n("code",[t._v("entries[index]")]),t._v("로 접근이 가능하다."),n("br"),t._v("\n이러한 내부 구조 방식 덕분에 python의 dictionary는 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("순서를 기억")])]),t._v("한다.\n또한 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("메모리도 효율적으로 사용")])]),t._v("한다.\n("),n("a",{attrs:{href:"http://blog.hwahae.co.kr/all/tech/tech-tech/6662/",target:"_blank",rel:"noopener noreferrer"}},[t._v("참고1"),n("OutboundLink")],1),t._v(", "),n("a",{attrs:{href:"https://kadensungbincho.tistory.com/23",target:"_blank",rel:"noopener noreferrer"}},[t._v("참고2"),n("OutboundLink")],1),t._v(")")])]),t._v(" "),n("li",[n("p",[t._v("Jupyter Notebook 에서 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("함수의 실행시간을 체크")])]),t._v("하기 위해\ntime 모듈을 사용할 필요 없이 "),n("code",[t._v("%timeit 함수_이름()")]),t._v(" 방식으로 매직메서드를 사용하면 편리하다.")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("lambda")]),t._v("와 "),n("code",[t._v("map")]),t._v("은 Python에서 공식적으로 권장하지 않지만 많이 쓰인다...")]),t._v(" "),n("p",[t._v("그렇지만 "),n("code",[t._v("reduce")]),t._v("는 대용량 데이터를 다룰 때 많이 사용된다.")])]),t._v(" "),n("li",[n("p",[n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("generator")])]),t._v(" 및 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("generator comprehension")])]),t._v("을 적극적으로 사용하자.\n"),n("code",[t._v("iter()")]),t._v("로 iterable 객체의 시작 주소를 가져오고, "),n("code",[t._v("next()")]),t._v("로 다음 메모리 주소를 가져온다.   element가 사용되는 시점에 값을 메모리에 반환하기에,\n"),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("메모리를 절약")])]),t._v("할 수 있다."),n("br"),t._v("\n  list comprehension 처럼 "),n("code",[t._v("(i*i for i in range(100))")]),t._v(" 같이 사용하면 generator comprehension을 사용한 것이다. 이는 아직 메모리에 불러오지 않은 상황이며,\n"),n("code",[t._v("yield")]),t._v(", "),n("code",[t._v("list()")]),t._v(", "),n("code",[t._v("next()")]),t._v("를 통해 사용할 수 있다.")])]),t._v(" "),n("li",[n("p",[t._v("객체 속 특정 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("변수를 숨기기")])]),t._v("(은닉)하기 위해 "),n("code",[t._v("self.__variable")]),t._v("로 선언하면 된다."),n("br"),t._v("\n이렇게 숨긴 변수는 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("property decorator")])]),t._v("를 통해 호출할 수도 있다.")])]),t._v(" "),n("li",[n("p",[t._v("Python에서 가상환경을 구성하기 위해 대표적으로 "),n("code",[t._v("virtualenv")]),t._v("와 "),n("code",[t._v("conda")]),t._v("가 있다.\n"),n("code",[t._v("virtualenv")]),t._v("는 pip로 라이브러리 설치 시 c로 컴파일된 내용이 포함되지 않는 경우가 있는 반면,\n"),n("code",[t._v("conda")]),t._v("는 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("c로 컴파일된 내용을 포함")])]),t._v("시켜 주기 때문에, 라이브러리 의존성을 쉽게 구성할 수 있다.")])]),t._v(" "),n("li",[n("p",[t._v("Exception을 발생시키는 방법은 try ~ except 이외에도 "),n("code",[t._v("raise")]),t._v("와 "),n("code",[t._v("assert")]),t._v(" 방식이 존재한다.\n전자는 "),n("code",[t._v("raise <Exception Type>(예외_정보)")]),t._v(" 방식으로 사용하며,\n후자는 "),n("code",[t._v("assert 예외_조건")]),t._v(" 방식으로 주로 함수단에서 많이 사용한다.\n위의 방식들 모두 모델 학습 시 "),n("strong",[t._v("무의미한 시간 소모를 막기 위해 자주 사용")]),t._v("된다.")])]),t._v(" "),n("li",[n("p",[t._v("컴퓨터는 파일을 처리하기 위해 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("binary")])]),t._v("(이진법 형식) 파일로 변환시킨다.\n메모장으로 열었을 때 깨져있으면 binary 파일이다.")])]),t._v(" "),n("li",[n("p",[t._v("파일을 읽을 때 "),n("code",[t._v("f.readlines()")]),t._v("는 한 번에 파일 내용을 메모리에 올리는 반면,\n"),n("code",[t._v("f.readline()")]),t._v("은 실행 시 마다 한 줄 씩 읽어 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("메모리를 절약")])]),t._v("할 수 있다.")])]),t._v(" "),n("li",[n("p",[t._v("파이썬에서 파일을 처리할 때 "),n("code",[t._v("os")]),t._v(", "),n("code",[t._v("shutil")]),t._v(", "),n("code",[t._v("pathlib")]),t._v(" 등을 사용하는데, 특히나 "),n("code",[t._v("pathlib")]),t._v("을 주로 사용한다.\npathlib은 path를 객체로 다루기에 작업시 편리한 점들이 많다.")])]),t._v(" "),n("li",[n("p",[t._v("객체에 대한 정보를 저장하기 위해 "),n("code",[t._v("pickle")]),t._v(" 내장 모듈을 사용하면 좋다.\n말 그래도 객체를 저장할 수 있기 때문에, 클래스의 인스턴스도 저장할 수 있다.")])])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" pickle\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# save")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'write_object.pickle'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    test "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    picle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dump"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# load")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'read_object.pickle'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    test "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pickle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("br"),t._v(" "),n("ol",{attrs:{start:"13"}},[n("li",[t._v("서비스 운영 및 모델 학습 관리를 위해서는 "),n("span",{staticStyle:{color:"#2454ff"}},[n("strong",[t._v("Logging")])]),t._v("은 필수이다.\nPython에서 "),n("code",[t._v("logging")]),t._v(" 라이브러리를 이용하면 된다.")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" logging\n\n\nlogger "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logging"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getLogger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'log_main'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Logger를 선언하고,")]),t._v("\nstream_handler "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logging"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FileHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'log_main.log'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 로그 기록을 파일에 추가한다.")]),t._v("\nlogger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream_handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlogger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("basicConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("level"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("logging"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEBUG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 로그 기록은 가장 낮은 DEBUG 단부터 기록한다.")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DEBUG > INFO > WARNING > ERROR > CRITICAL")]),t._v("\n")])])]),n("ol",{attrs:{start:"14"}},[n("li",[t._v("작업 실행을 위한 configuration을 입력하는 방식으로는 "),n("code",[t._v("configparser")]),t._v("를 이용하거나 "),n("code",[t._v("argparser")]),t._v("를 사용한다.\n전자는 미리 파일로 내용(Section, Key, Value)를 작성해 놓은 것을 불러오는 방식이며,\n후자는 실행 시점에 직접 입력하는 방식이다.")])]),t._v(" "),n("br"),t._v(" "),n("hr"),t._v(" "),n("h3",{attrs:{id:"피어-세션"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#피어-세션"}},[t._v("#")]),t._v(" 피어 세션")]),t._v(" "),n("p",[t._v("처음으로 팀원들과 각자 학습한 내용을 공유하였다.")]),t._v(" "),n("p",[t._v("공유 과정 속에서, 알게 된 내용은 단단하게 다지게 되었고, 모르던 내용에 대해서는 이해할 수 있는 유익한 시간이었다.")]),t._v(" "),n("p",[t._v("지금은 python에 대해서만 진행했지만, AI를 본격적으로 시작하게되는 때가 매우 기대된다.")]),t._v(" "),n("br"),t._v(" "),n("br"),t._v(" "),n("br")])}),[],!1,null,"c0640966",null);s.default=e.exports}}]);