(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{379:function(n,t,_){},436:function(n,t,_){"use strict";_(379)},508:function(n,t,_){"use strict";_.r(t);_(436);var v=_(33),o=Object(v.a)({},(function(){var n=this,t=n.$createElement,_=n._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[_("h3",{attrs:{id:"_2022-01-19-새로-알게된-점"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2022-01-19-새로-알게된-점"}},[n._v("#")]),n._v(" 2022/01/19, 새로 알게된 점")]),n._v(" "),_("p",{staticClass:"tags"},[n._v("#Numpy #Pandas")]),n._v(" "),_("p",[n._v("  오늘은 내용은 데이터 사이언스를 진행하려면 필수적으로 알아야 하는 "),_("span",{staticStyle:{color:"#2454ff"}},[_("strong",[n._v("Numpy")])]),n._v("와\n"),_("span",{staticStyle:{color:"#2454ff"}},[_("strong",[n._v("Pandas")])]),n._v(" 라이브러리에 대해 학습하였다. 사실 그 전에도 Kaggle에 참여하기 위해 공식문서를\n참고하며 익히긴 했었지만, 헷갈렸던 부분(특히 pandas의 "),_("code",[n._v("groupby")]),n._v(")에 대한 이해도를 높일 수 있었던 점이 좋았다.")]),n._v(" "),_("p",[n._v("  그래서 오늘 알게된 내용들은 다음과 같다. 각 라이브러리의 기능들의 나열이라 공식문서를 참고하는 것이 더 효율적이긴 하지만,\n직접 기록함으로서, 몇 개월 뒤 이러한 기록을 다시 읽어보며 머릿속에 남아있는 지식이 어느정도 되는지 반성하는 척도로 사용하려고 한다.")]),n._v(" "),_("br"),n._v(" "),_("ol",[_("li",[_("p",[n._v("  numpy는 내부적으로 C/C++ 및 포트란 언어로 작성되어 있으며, 연산의 성능을 올리기 위해 Python의 장점 중에 하나인\n"),_("span",{staticStyle:{color:"#2454ff"}},[_("strong",[n._v("dynamic typing을 포기")])]),n._v("하였다.\n그래서 ndarry 객체에는 "),_("span",{staticStyle:{color:"#2454ff"}},[_("strong",[n._v("하나의 데이터 타입만 할당")])]),n._v("할 수 있다."),_("br"),n._v("\n  기존 Python의 리스트는 메모리에 순서대로 할당되지 않고 각기 다른 곳에 할당된 주소를 저장하기 때문에 효율적인 연산을 하기가 힘들다.\n하지만 "),_("span",{staticStyle:{color:"#2454ff"}},[_("strong",[n._v("numpy는 메모리에 순차로 할당")])]),n._v("하기에 연산시 큰 이점이 있다.\n( for loop   <   list comprehension   <<   numpy )"),_("br"),n._v(" "),_("strong",[n._v("다만 메모리 할당에서의 이점은 없다.")])])]),n._v(" "),_("li",[_("p",[n._v("  numpy에서 "),_("code",[n._v("np.empty()")]),n._v("나 "),_("code",[n._v("np.empty_like()")]),n._v("는 입력한 shape 으로만 주어지고 "),_("span",{staticStyle:{color:"#2454ff"}},[_("strong",[n._v("메모리에 할당되지 않은채로 ndarray를 생성")])]),n._v("한다.\n데스크탑 환경에서(VRAM이 낮은 GPU 클라우드도 마찬가지) 모델 학습을 돌리다보면 종종 RAM 부족에 시달렸는데, 어제 배운 Python의 "),_("code",[n._v("generator")]),n._v("나\n"),_("code",[n._v("np.empty()")]),n._v(" 처럼 "),_("strong",[n._v("메모리를 효율적으로 쓰는 방법")]),n._v("도 잘 알아둬야 겠다고 생각했다.")])]),n._v(" "),_("li",[_("p",[n._v("  안정적인 학습을 위해 학습 데이터를 K-Fold를 이용하여 Fold 별로 index를 구해, 해당 index로 학습 데이터의 값을 분리했었다.\nKaggle 커널을 참고하느라 무엇인지도 모르고 사용했었는데, 이 기능이 numpy에서 "),_("span",{staticStyle:{color:"#2454ff"}},[_("strong",[n._v("fancy index")])]),n._v("라고 불리는 것을 알게 되었다.")])]),n._v(" "),_("li",[_("p",[n._v("  pandas의 "),_("code",[n._v("groupby")]),n._v("는 SQL의 groupby 명령어와 유사하다. "),_("code",[n._v("split")]),n._v(" ➜ "),_("code",[n._v("apply")]),n._v(" ➜ "),_("code",[n._v("combine")]),n._v(" 과정을 거친다.")])]),n._v(" "),_("li",[_("p",[n._v("  pandas의 "),_("code",[n._v("merge")]),n._v("를 통해 SQL의 "),_("code",[n._v("inner join")]),n._v(", "),_("code",[n._v("outer join")]),n._v(", "),_("code",[n._v("left join")]),n._v(", "),_("code",[n._v("right join")]),n._v(" 기능을 사용할 수 있다.")])]),n._v(" "),_("li",[_("p",[n._v("  pandas에서는 "),_("span",{staticStyle:{color:"#2454ff"}},[_("strong",[n._v("db-connection 기능")])]),n._v("을 통해 DB 서버에 쿼리를 보내 데이터를 바로 dataframe에 담을 수 있다.\n"),_("code",[n._v("sqlite3.connect(URL)")]),n._v(" 같은 방식으로 DB 서버에 연결한 뒤, "),_("code",[n._v("pd.read_sql_query('QUERY;', conn)")]),n._v(" 방식으로 dataframe을 만들면 된다.")])])]),n._v(" "),_("br"),n._v(" "),_("hr"),n._v(" "),_("h3",{attrs:{id:"피어-세션"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#피어-세션"}},[n._v("#")]),n._v(" 피어 세션")]),n._v(" "),_("p",[n._v("다들 python 학습을 하느라 실습 위주의 이야기를 나눴다.")]),n._v(" "),_("p",[n._v("Math of AI 학습을 고대하고 있고, 특히 통계학을 맛 볼 생각에 신이난게(?) 분명하다..")]),n._v(" "),_("br"),n._v(" "),_("br"),n._v(" "),_("br")])}),[],!1,null,"21970c4c",null);t.default=o.exports}}]);